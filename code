// Author: traitorgiraffe
// Version: .05

#include <Servo.h>
#include <SoftwareSerial.h>
#include <DFRobotDFPlayerMini.h>

// Ultrasonic sensor pins
int triggerPin = 2;
int echoPin = 3;

// Motor pins
int leftMotorPin = 8;
int rightMotorPin = 9;

// Servo pin
int headServoPin = 6;

// LED pin
int ledPin = 13;

// Variables for the distance measurement
long duration;
int distance;

// Create Servo objects for each motor
Servo leftMotor;
Servo rightMotor;
Servo headServo;

// Create a software serial for the DFPlayer Mini
SoftwareSerial mySoftwareSerial(10, 11);  // RX, TX

// Create a DFPlayer Mini object
DFRobotDFPlayerMini myDFPlayer;

void setup() {
  // Initialize the motors
  leftMotor.attach(leftMotorPin);
  rightMotor.attach(rightMotorPin);
  headServo.attach(headServoPin);
  
  // Initialize the ultrasonic sensor
  pinMode(triggerPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Initialize the LED
  pinMode(ledPin, OUTPUT);
  
  // Initialize the software serial
  mySoftwareSerial.begin(9600);

  // Initialize the DFPlayer Mini
  if (!myDFPlayer.begin(mySoftwareSerial)) {
    // Failed to initialize, loop forever
    while (true);
  }
  
  // Set the volume to maximum
  myDFPlayer.volume(30);
}

void loop() {
  // Ultrasonic Sensor
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);

  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2;  // Speed of sound wave divided by 2 (go and back)

  if (distance < 20) {  // If an object is detected within 20 cm
    leftMotor.write(90);  // Stop the left motor
    rightMotor.write(90);  // Stop the right motor

    // Flash LED three times
    for (int i = 0; i < 3; i++) {
      digitalWrite(ledPin, HIGH);  // Light up the LED
      delay(200);
      digitalWrite(ledPin, LOW);  // Turn off the LED
      delay(200);
    }
    
    // Play a random sound from a list of sounds (1 to 10 in this case)
    int randomSound = random(1, 11);
    myDFPlayer.play(randomSound);  // Play the random sound

    // Start rotating the head and scanning for obstacles
    int headDirection = 0;
    for (int angle = 0; angle <= 180; angle++) {
      headServo.write(angle);
      delay(15);

      // Do another distance check
      digitalWrite(triggerPin, LOW);
      delayMicroseconds(2);
      digitalWrite(triggerPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(triggerPin, LOW);
      
      duration = pulseIn(echoPin, HIGH);
      distance = duration * 0.034 / 2;

      if (distance >= 20) {
        // No obstacle detected, save the direction and break the loop
        headDirection = angle;
        break;
      }
    }
    
    // Now move the droid in the direction of the head
    if (headDirection > 90) {
      // Turn right
      leftMotor.write(0);  // Move the left motor forward
      rightMotor.write(90);  // Stop the right motor
    } else {
      // Turn left
      leftMotor.write(90);  // Stop the left motor
      rightMotor.write(180);  // Move the right motor forward
    }
    delay(1000);  // Wait for 1 second to complete the turn
    // Now move forward
    leftMotor.write(0);  // Move the left motor forward
    rightMotor.write(180);  // Move the right motor forward (need to rotate in opposite direction)
  }
  else {
    digitalWrite(ledPin, LOW);  // Turn off the LED
    leftMotor.write(0);  // Move the left motor forward
    rightMotor.write(180);  // Move the right motor forward (need to rotate in opposite direction)
    headServo.write(0);  // Reset the head position
  }
}
